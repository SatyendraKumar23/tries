import java.util.*;
public class wordbreakproblem {
        static class node{
            node children[]=new node[26];
            boolean eow=false;
    
            public node()
            {
                for(int i=0;i<26;i++)
                {
                    children[i]=null;
                }
            }
        }
        public static node root=new node();
    
        public static void insert(String str)
        {
            node curr=root;
            for(int level=0;level<str.length();level++)
            {
                int idx=str.charAt(level)-'a';
    
                if(curr.children[idx]==null)
                {
                    curr.children[idx]=new node();
                }
                curr=curr.children[idx];
            }
            curr.eow=true;
        }
        public static boolean searching(String str)
        {
            node curr=root;
    
            for(int level=0;level<str.length();level++)
            {
                int idx=str.charAt(level)-'a';
                if(curr.children[idx]==null)
                {
                    return false;
                }
                curr=curr.children[idx];
            }
            return curr.eow==true;
        }
        public static boolean wordbreak(String key)
        {
            if(key.length()==0)
            {
                return true;
            }
            for(int i=1;i<=key.length();i++)
            {
                if(searching(key.substring(0,i))&&wordbreak(key.substring(i)))
                {
                    return true;
                }
            }
            return false;

        }
        public static void main(String[] args) {
            String str[]={"i","like","sam","samsung"};
            for(int i=0;i<str.length;i++)
            {
                insert(str[i]);
            }
            String key="ilikesamsung";

            System.out.println(wordbreak(key));

       
    
        }
    
        
    }
    
